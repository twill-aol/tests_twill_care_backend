{"uid":"65a5247f4f70c235","name":"test_edit_post","fullName":"tests.test_post.TestPost#test_edit_post","historyId":"b033009342de486e62ace34344fcef5a","time":{"start":1671441271346,"stop":1671441271998,"duration":652},"description":"This test checks put:/api/v1/threads/discussion/","descriptionHtml":"<p>This test checks put:/api/v1/threads/discussion/</p>\n","status":"skipped","statusMessage":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","statusTrace":"self = <test_post.TestPost object at 0x7fce9bd43be0>\n\n    @allure.label(\"post\", \"authorization\", \"smoke\")\n    @allure.description(\"This test checks put:/api/v1/threads/discussion/\")\n    @pytest.mark.xfail(reason=\"401. Problem will be fixed\")\n    def test_edit_post(self):\n        '''Check editing a post'''\n        response_create_post = self.action_post()\n        response_create_post_json = self.response_to_json(response_create_post)\n        new_post_id = response_create_post_json[\"id\"]\n        response_read_post = self.read_post(new_post_id)\n>       response_edit_post = self.action_post(new_post_id)\n\ntests/test_post.py:124: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nlib/post_case.py:65: in action_post\n    Assertions.assert_code_status(response_action_post, 201)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [401]>, expected_status_code = 201\n\n    @staticmethod\n    def assert_code_status(response: Response, expected_status_code):\n    \n        assert (\n>           response.status_code == expected_status_code\n        ), f\"Unexpected status code! Expected: {expected_status_code}. \\\n            Actual: {response.status_code}\"\nE       AssertionError: Unexpected status code! Expected: 201.             Actual: 401\n\nlib/assertions.py:47: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"This test checks put:/api/v1/threads/discussion/","status":"skipped","statusMessage":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","statusTrace":"self = <test_post.TestPost object at 0x7fce9bd43be0>\n\n    @allure.label(\"post\", \"authorization\", \"smoke\")\n    @allure.description(\"This test checks put:/api/v1/threads/discussion/\")\n    @pytest.mark.xfail(reason=\"401. Problem will be fixed\")\n    def test_edit_post(self):\n        '''Check editing a post'''\n        response_create_post = self.action_post()\n        response_create_post_json = self.response_to_json(response_create_post)\n        new_post_id = response_create_post_json[\"id\"]\n        response_read_post = self.read_post(new_post_id)\n>       response_edit_post = self.action_post(new_post_id)\n\ntests/test_post.py:124: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nlib/post_case.py:65: in action_post\n    Assertions.assert_code_status(response_action_post, 201)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [401]>, expected_status_code = 201\n\n    @staticmethod\n    def assert_code_status(response: Response, expected_status_code):\n    \n        assert (\n>           response.status_code == expected_status_code\n        ), f\"Unexpected status code! Expected: {expected_status_code}. \\\n            Actual: {response.status_code}\"\nE       AssertionError: Unexpected status code! Expected: 201.             Actual: 401\n\nlib/assertions.py:47: AssertionError","steps":[{"name":"POST request to URL '/api/v1/threads/discussion/'","time":{"start":1671441271347,"stop":1671441271693,"duration":346},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"DELETE request to URL '/api/v1/threads/discussion/13602/'","time":{"start":1671441271693,"stop":1671441271868,"duration":175},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"PUT request to URL '/api/v1/threads/discussion/13602'","time":{"start":1671441271868,"stop":1671441271997,"duration":129},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":3,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"post","value":"authorization"},{"name":"epic","value":"[Community] Posts"},{"name":"post","value":"smoke"},{"name":"tag","value":"@pytest.mark.xfail(reason='401. Problem will be fixed')"},{"name":"tag","value":"smoke"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_post"},{"name":"subSuite","value":"TestPost"},{"name":"host","value":"fv-az551-945"},{"name":"thread","value":"2283-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_post"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":106,"passed":0,"unknown":0,"total":106},"items":[{"uid":"bb0ee7f79dd538c9","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/115//#testresult/bb0ee7f79dd538c9","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1671430719116,"stop":1671430719738,"duration":622}},{"uid":"a22830f80c3cd46e","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/114//#testresult/a22830f80c3cd46e","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1671419744987,"stop":1671419746095,"duration":1108}},{"uid":"1209109da0e7b11d","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/113//#testresult/1209109da0e7b11d","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1671412044780,"stop":1671412046128,"duration":1348}},{"uid":"d38a9d0106e0d175","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/112//#testresult/d38a9d0106e0d175","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1671397927072,"stop":1671397928085,"duration":1013}},{"uid":"aaa74b3de1f37928","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/111//#testresult/aaa74b3de1f37928","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1671387356934,"stop":1671387357571,"duration":637}},{"uid":"2f46c40219917f61","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/110//#testresult/2f46c40219917f61","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1671376395444,"stop":1671376396182,"duration":738}},{"uid":"1120ef532ff4c937","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/109//#testresult/1120ef532ff4c937","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1671366297231,"stop":1671366297839,"duration":608}},{"uid":"f6c4afe5b36e6e7a","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/108//#testresult/f6c4afe5b36e6e7a","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1671354779371,"stop":1671354780251,"duration":880}},{"uid":"3a785b97f3bf2b1c","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/107//#testresult/3a785b97f3bf2b1c","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1671344219103,"stop":1671344219821,"duration":718}},{"uid":"267039cfaed98ae2","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/106//#testresult/267039cfaed98ae2","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1671333334883,"stop":1671333335768,"duration":885}},{"uid":"8bc085a50b0979d9","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/105//#testresult/8bc085a50b0979d9","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1671325770915,"stop":1671325771589,"duration":674}},{"uid":"f10de1d3196ecd45","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/104//#testresult/f10de1d3196ecd45","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1671311514136,"stop":1671311515662,"duration":1526}},{"uid":"d16141297808b6fc","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/103//#testresult/d16141297808b6fc","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1671300963995,"stop":1671300964600,"duration":605}},{"uid":"87a3bc7ff73a1210","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/102//#testresult/87a3bc7ff73a1210","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1671289977730,"stop":1671289978415,"duration":685}},{"uid":"e43adf4c87948d84","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/101//#testresult/e43adf4c87948d84","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1671279879881,"stop":1671279880550,"duration":669}},{"uid":"14908031f365b140","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/100//#testresult/14908031f365b140","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1671268399773,"stop":1671268400368,"duration":595}},{"uid":"901d6a453c4db8ac","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/99//#testresult/901d6a453c4db8ac","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1671257814625,"stop":1671257815322,"duration":697}},{"uid":"9949e707ed7f2dee","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/98//#testresult/9949e707ed7f2dee","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1671246908975,"stop":1671246910041,"duration":1066}},{"uid":"eaa72709a452d3d7","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/97//#testresult/eaa72709a452d3d7","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1671239249251,"stop":1671239249901,"duration":650}},{"uid":"ad78144515d4fb09","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/96//#testresult/ad78144515d4fb09","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1671225171960,"stop":1671225173095,"duration":1135}}]},"tags":["smoke","@pytest.mark.xfail(reason='401. Problem will be fixed')"]},"source":"65a5247f4f70c235.json","parameterValues":[]}
{"uid":"8bc085a50b0979d9","name":"test_edit_post","fullName":"tests.test_post.TestPost#test_edit_post","historyId":"b033009342de486e62ace34344fcef5a","time":{"start":1671325770915,"stop":1671325771589,"duration":674},"description":"This test checks put:/api/v1/threads/discussion/","descriptionHtml":"<p>This test checks put:/api/v1/threads/discussion/</p>\n","status":"skipped","statusMessage":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","statusTrace":"self = <test_post.TestPost object at 0x7f8f9a9f7cd0>\n\n    @allure.label(\"post\", \"authorization\", \"smoke\")\n    @allure.description(\"This test checks put:/api/v1/threads/discussion/\")\n    @pytest.mark.xfail(reason=\"401. Problem will be fixed\")\n    def test_edit_post(self):\n        '''Check editing a post'''\n        response_create_post = self.action_post()\n        response_create_post_json = self.response_to_json(response_create_post)\n        new_post_id = response_create_post_json[\"id\"]\n        response_read_post = self.read_post(new_post_id)\n>       response_edit_post = self.action_post(new_post_id)\n\ntests/test_post.py:124: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nlib/post_case.py:65: in action_post\n    Assertions.assert_code_status(response_action_post, 201)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [401]>, expected_status_code = 201\n\n    @staticmethod\n    def assert_code_status(response: Response, expected_status_code):\n    \n        assert (\n>           response.status_code == expected_status_code\n        ), f\"Unexpected status code! Expected: {expected_status_code}. \\\n            Actual: {response.status_code}\"\nE       AssertionError: Unexpected status code! Expected: 201.             Actual: 401\n\nlib/assertions.py:47: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"This test checks put:/api/v1/threads/discussion/","status":"skipped","statusMessage":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","statusTrace":"self = <test_post.TestPost object at 0x7f8f9a9f7cd0>\n\n    @allure.label(\"post\", \"authorization\", \"smoke\")\n    @allure.description(\"This test checks put:/api/v1/threads/discussion/\")\n    @pytest.mark.xfail(reason=\"401. Problem will be fixed\")\n    def test_edit_post(self):\n        '''Check editing a post'''\n        response_create_post = self.action_post()\n        response_create_post_json = self.response_to_json(response_create_post)\n        new_post_id = response_create_post_json[\"id\"]\n        response_read_post = self.read_post(new_post_id)\n>       response_edit_post = self.action_post(new_post_id)\n\ntests/test_post.py:124: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nlib/post_case.py:65: in action_post\n    Assertions.assert_code_status(response_action_post, 201)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [401]>, expected_status_code = 201\n\n    @staticmethod\n    def assert_code_status(response: Response, expected_status_code):\n    \n        assert (\n>           response.status_code == expected_status_code\n        ), f\"Unexpected status code! Expected: {expected_status_code}. \\\n            Actual: {response.status_code}\"\nE       AssertionError: Unexpected status code! Expected: 201.             Actual: 401\n\nlib/assertions.py:47: AssertionError","steps":[{"name":"POST request to URL '/api/v1/threads/discussion/'","time":{"start":1671325770915,"stop":1671325771250,"duration":335},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"DELETE request to URL '/api/v1/threads/discussion/13492/'","time":{"start":1671325771250,"stop":1671325771432,"duration":182},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"PUT request to URL '/api/v1/threads/discussion/13492'","time":{"start":1671325771432,"stop":1671325771588,"duration":156},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":3,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"post","value":"authorization"},{"name":"epic","value":"[Community] Posts"},{"name":"post","value":"smoke"},{"name":"tag","value":"@pytest.mark.xfail(reason='401. Problem will be fixed')"},{"name":"tag","value":"smoke"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_post"},{"name":"subSuite","value":"TestPost"},{"name":"host","value":"fv-az407-431"},{"name":"thread","value":"2364-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_post"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":95,"passed":0,"unknown":0,"total":95},"items":[{"uid":"f10de1d3196ecd45","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/104//#testresult/f10de1d3196ecd45","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1671311514136,"stop":1671311515662,"duration":1526}},{"uid":"d16141297808b6fc","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/103//#testresult/d16141297808b6fc","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1671300963995,"stop":1671300964600,"duration":605}},{"uid":"87a3bc7ff73a1210","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/102//#testresult/87a3bc7ff73a1210","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1671289977730,"stop":1671289978415,"duration":685}},{"uid":"e43adf4c87948d84","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/101//#testresult/e43adf4c87948d84","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1671279879881,"stop":1671279880550,"duration":669}},{"uid":"14908031f365b140","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/100//#testresult/14908031f365b140","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1671268399773,"stop":1671268400368,"duration":595}},{"uid":"901d6a453c4db8ac","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/99//#testresult/901d6a453c4db8ac","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1671257814625,"stop":1671257815322,"duration":697}},{"uid":"9949e707ed7f2dee","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/98//#testresult/9949e707ed7f2dee","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1671246908975,"stop":1671246910041,"duration":1066}},{"uid":"eaa72709a452d3d7","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/97//#testresult/eaa72709a452d3d7","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1671239249251,"stop":1671239249901,"duration":650}},{"uid":"ad78144515d4fb09","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/96//#testresult/ad78144515d4fb09","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1671225171960,"stop":1671225173095,"duration":1135}},{"uid":"5e42220ac4b0b227","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/95//#testresult/5e42220ac4b0b227","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1671214644942,"stop":1671214646088,"duration":1146}},{"uid":"d85f64e93459d681","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/94//#testresult/d85f64e93459d681","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1671203801525,"stop":1671203803084,"duration":1559}},{"uid":"14baef9cf27cd77c","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/93//#testresult/14baef9cf27cd77c","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1671193539785,"stop":1671193540509,"duration":724}},{"uid":"934611a77b0bd04","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/92//#testresult/934611a77b0bd04","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1671182022169,"stop":1671182023358,"duration":1189}},{"uid":"f12d942ccd3cc6c8","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/91//#testresult/f12d942ccd3cc6c8","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1671171494173,"stop":1671171494736,"duration":563}},{"uid":"f883e8d7507bb73b","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/90//#testresult/f883e8d7507bb73b","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1671160551058,"stop":1671160551751,"duration":693}},{"uid":"2ed4d22d9199d5df","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/89//#testresult/2ed4d22d9199d5df","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1671152939572,"stop":1671152940162,"duration":590}},{"uid":"339852d09a8c83d4","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/88//#testresult/339852d09a8c83d4","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1671138779292,"stop":1671138780400,"duration":1108}},{"uid":"76575fcff330833","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/87//#testresult/76575fcff330833","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1671128232620,"stop":1671128234015,"duration":1395}},{"uid":"c7c4608a9b748866","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/86//#testresult/c7c4608a9b748866","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1671117364022,"stop":1671117365149,"duration":1127}},{"uid":"b34af523e7db8ac4","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/85//#testresult/b34af523e7db8ac4","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1671107343037,"stop":1671107344590,"duration":1553}}]},"tags":["smoke","@pytest.mark.xfail(reason='401. Problem will be fixed')"]},"source":"8bc085a50b0979d9.json","parameterValues":[]}
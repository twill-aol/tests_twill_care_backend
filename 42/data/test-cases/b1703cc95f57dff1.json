{"uid":"b1703cc95f57dff1","name":"test_edit_post","fullName":"tests.test_post.TestPost#test_edit_post","historyId":"b033009342de486e62ace34344fcef5a","time":{"start":1670642139744,"stop":1670642140877,"duration":1133},"description":"This test checks put:/api/v1/threads/discussion/","descriptionHtml":"<p>This test checks put:/api/v1/threads/discussion/</p>\n","status":"skipped","statusMessage":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","statusTrace":"self = <test_post.TestPost object at 0x7f47e5c9fb20>\n\n    @allure.label(\"post\", \"authorization\", \"smoke\")\n    @allure.description(\"This test checks put:/api/v1/threads/discussion/\")\n    @pytest.mark.xfail(reason=\"401. Problem will be fixed\")\n    def test_edit_post(self):\n        '''Check editing a post'''\n        response_create_post = self.action_post()\n        response_create_post_json = self.response_to_json(response_create_post)\n        new_post_id = response_create_post_json[\"id\"]\n        response_read_post = self.read_post(new_post_id)\n>       response_edit_post = self.action_post(new_post_id)\n\ntests/test_post.py:124: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nlib/post_case.py:65: in action_post\n    Assertions.assert_code_status(response_action_post, 201)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [401]>, expected_status_code = 201\n\n    @staticmethod\n    def assert_code_status(response: Response, expected_status_code):\n    \n        assert (\n>           response.status_code == expected_status_code\n        ), f\"Unexpected status code! Expected: {expected_status_code}. \\\n            Actual: {response.status_code}\"\nE       AssertionError: Unexpected status code! Expected: 201.             Actual: 401\n\nlib/assertions.py:47: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"This test checks put:/api/v1/threads/discussion/","status":"skipped","statusMessage":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","statusTrace":"self = <test_post.TestPost object at 0x7f47e5c9fb20>\n\n    @allure.label(\"post\", \"authorization\", \"smoke\")\n    @allure.description(\"This test checks put:/api/v1/threads/discussion/\")\n    @pytest.mark.xfail(reason=\"401. Problem will be fixed\")\n    def test_edit_post(self):\n        '''Check editing a post'''\n        response_create_post = self.action_post()\n        response_create_post_json = self.response_to_json(response_create_post)\n        new_post_id = response_create_post_json[\"id\"]\n        response_read_post = self.read_post(new_post_id)\n>       response_edit_post = self.action_post(new_post_id)\n\ntests/test_post.py:124: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nlib/post_case.py:65: in action_post\n    Assertions.assert_code_status(response_action_post, 201)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [401]>, expected_status_code = 201\n\n    @staticmethod\n    def assert_code_status(response: Response, expected_status_code):\n    \n        assert (\n>           response.status_code == expected_status_code\n        ), f\"Unexpected status code! Expected: {expected_status_code}. \\\n            Actual: {response.status_code}\"\nE       AssertionError: Unexpected status code! Expected: 201.             Actual: 401\n\nlib/assertions.py:47: AssertionError","steps":[{"name":"POST request to URL '/api/v1/threads/discussion/'","time":{"start":1670642139745,"stop":1670642140246,"duration":501},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"DELETE request to URL '/api/v1/threads/discussion/13018/'","time":{"start":1670642140246,"stop":1670642140561,"duration":315},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"PUT request to URL '/api/v1/threads/discussion/13018'","time":{"start":1670642140561,"stop":1670642140876,"duration":315},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":3,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"post","value":"authorization"},{"name":"epic","value":"[Community] Posts"},{"name":"post","value":"smoke"},{"name":"tag","value":"@pytest.mark.xfail(reason='401. Problem will be fixed')"},{"name":"tag","value":"smoke"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_post"},{"name":"subSuite","value":"TestPost"},{"name":"host","value":"fv-az565-173"},{"name":"thread","value":"2295-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_post"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":32,"passed":0,"unknown":0,"total":32},"items":[{"uid":"a6f5af3f61c5a542","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/41//#testresult/a6f5af3f61c5a542","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1670634559833,"stop":1670634561588,"duration":1755}},{"uid":"a6867e51a5722079","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/40//#testresult/a6867e51a5722079","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1670620429620,"stop":1670620430880,"duration":1260}},{"uid":"792c2c67d506f573","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/39//#testresult/792c2c67d506f573","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1670609901215,"stop":1670609901975,"duration":760}},{"uid":"499899ff165d9623","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/38//#testresult/499899ff165d9623","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1670598897999,"stop":1670598899666,"duration":1667}},{"uid":"1210782aca71d844","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/37//#testresult/1210782aca71d844","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1670588857471,"stop":1670588859106,"duration":1635}},{"uid":"ca78722c5fe1a944","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/36//#testresult/ca78722c5fe1a944","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1670577275949,"stop":1670577276699,"duration":750}},{"uid":"e2b3f6505fd60101","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/35//#testresult/e2b3f6505fd60101","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1670566744243,"stop":1670566745121,"duration":878}},{"uid":"b5b4facd422b3644","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/34//#testresult/b5b4facd422b3644","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1670555877136,"stop":1670555877836,"duration":700}},{"uid":"1f2b63c887b4f6e0","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/33//#testresult/1f2b63c887b4f6e0","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1670548448686,"stop":1670548450309,"duration":1623}},{"uid":"c9560aac527be56d","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/32//#testresult/c9560aac527be56d","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1670534030984,"stop":1670534031824,"duration":840}},{"uid":"11f23f40bd19d7fb","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/31//#testresult/11f23f40bd19d7fb","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1670523515406,"stop":1670523517083,"duration":1677}},{"uid":"1a6aff9fa6fef0cf","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/30//#testresult/1a6aff9fa6fef0cf","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1670512517776,"stop":1670512519208,"duration":1432}},{"uid":"89903772f8f60866","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/29//#testresult/89903772f8f60866","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1670502529651,"stop":1670502530111,"duration":460}},{"uid":"5976b088c9f758d8","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/28//#testresult/5976b088c9f758d8","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1670490881179,"stop":1670490881693,"duration":514}},{"uid":"b94dddf8f182ec38","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/27//#testresult/b94dddf8f182ec38","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1670480389915,"stop":1670480391427,"duration":1512}},{"uid":"436baa11a24fde40","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/26//#testresult/436baa11a24fde40","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1670469471057,"stop":1670469471614,"duration":557}},{"uid":"9784d18697b18bfe","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/25//#testresult/9784d18697b18bfe","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1670461937691,"stop":1670461938336,"duration":645}},{"uid":"63294fa962a9fe6c","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/24//#testresult/63294fa962a9fe6c","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1670447636913,"stop":1670447637858,"duration":945}},{"uid":"94d0429aa87375ff","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/23//#testresult/94d0429aa87375ff","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1670437129042,"stop":1670437130007,"duration":965}},{"uid":"a5bbce942c953199","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/22//#testresult/a5bbce942c953199","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1670426130302,"stop":1670426131664,"duration":1362}}]},"tags":["smoke","@pytest.mark.xfail(reason='401. Problem will be fixed')"]},"source":"b1703cc95f57dff1.json","parameterValues":[]}
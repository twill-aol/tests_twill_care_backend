{"uid":"909f090135c0f72","name":"test_edit_post","fullName":"tests.test_post.TestPost#test_edit_post","historyId":"b033009342de486e62ace34344fcef5a","time":{"start":1670879634698,"stop":1670879636286,"duration":1588},"description":"This test checks put:/api/v1/threads/discussion/","descriptionHtml":"<p>This test checks put:/api/v1/threads/discussion/</p>\n","status":"skipped","statusMessage":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","statusTrace":"self = <test_post.TestPost object at 0x7fb0004db970>\n\n    @allure.label(\"post\", \"authorization\", \"smoke\")\n    @allure.description(\"This test checks put:/api/v1/threads/discussion/\")\n    @pytest.mark.xfail(reason=\"401. Problem will be fixed\")\n    def test_edit_post(self):\n        '''Check editing a post'''\n        response_create_post = self.action_post()\n        response_create_post_json = self.response_to_json(response_create_post)\n        new_post_id = response_create_post_json[\"id\"]\n        response_read_post = self.read_post(new_post_id)\n>       response_edit_post = self.action_post(new_post_id)\n\ntests/test_post.py:124: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nlib/post_case.py:65: in action_post\n    Assertions.assert_code_status(response_action_post, 201)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [401]>, expected_status_code = 201\n\n    @staticmethod\n    def assert_code_status(response: Response, expected_status_code):\n    \n        assert (\n>           response.status_code == expected_status_code\n        ), f\"Unexpected status code! Expected: {expected_status_code}. \\\n            Actual: {response.status_code}\"\nE       AssertionError: Unexpected status code! Expected: 201.             Actual: 401\n\nlib/assertions.py:47: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"This test checks put:/api/v1/threads/discussion/","status":"skipped","statusMessage":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","statusTrace":"self = <test_post.TestPost object at 0x7fb0004db970>\n\n    @allure.label(\"post\", \"authorization\", \"smoke\")\n    @allure.description(\"This test checks put:/api/v1/threads/discussion/\")\n    @pytest.mark.xfail(reason=\"401. Problem will be fixed\")\n    def test_edit_post(self):\n        '''Check editing a post'''\n        response_create_post = self.action_post()\n        response_create_post_json = self.response_to_json(response_create_post)\n        new_post_id = response_create_post_json[\"id\"]\n        response_read_post = self.read_post(new_post_id)\n>       response_edit_post = self.action_post(new_post_id)\n\ntests/test_post.py:124: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nlib/post_case.py:65: in action_post\n    Assertions.assert_code_status(response_action_post, 201)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [401]>, expected_status_code = 201\n\n    @staticmethod\n    def assert_code_status(response: Response, expected_status_code):\n    \n        assert (\n>           response.status_code == expected_status_code\n        ), f\"Unexpected status code! Expected: {expected_status_code}. \\\n            Actual: {response.status_code}\"\nE       AssertionError: Unexpected status code! Expected: 201.             Actual: 401\n\nlib/assertions.py:47: AssertionError","steps":[{"name":"POST request to URL '/api/v1/threads/discussion/'","time":{"start":1670879634698,"stop":1670879635319,"duration":621},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"DELETE request to URL '/api/v1/threads/discussion/13150/'","time":{"start":1670879635319,"stop":1670879635710,"duration":391},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"PUT request to URL '/api/v1/threads/discussion/13150'","time":{"start":1670879635710,"stop":1670879636286,"duration":576},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":3,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"post","value":"authorization"},{"name":"epic","value":"[Community] Posts"},{"name":"post","value":"smoke"},{"name":"tag","value":"@pytest.mark.xfail(reason='401. Problem will be fixed')"},{"name":"tag","value":"smoke"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_post"},{"name":"subSuite","value":"TestPost"},{"name":"host","value":"fv-az565-486"},{"name":"thread","value":"2258-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_post"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":54,"passed":0,"unknown":0,"total":54},"items":[{"uid":"b16ca4af2f6705a9","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/63//#testresult/b16ca4af2f6705a9","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1670869148151,"stop":1670869149736,"duration":1585}},{"uid":"ffd98e00dec06163","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/62//#testresult/ffd98e00dec06163","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1670858169821,"stop":1670858170746,"duration":925}},{"uid":"8e9488dbdb4cada3","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/61//#testresult/8e9488dbdb4cada3","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1670848182556,"stop":1670848184144,"duration":1588}},{"uid":"28cf095e24a35af0","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/60//#testresult/28cf095e24a35af0","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1670836530049,"stop":1670836531326,"duration":1277}},{"uid":"477b5f86c5b56de2","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/59//#testresult/477b5f86c5b56de2","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1670825972446,"stop":1670825973051,"duration":605}},{"uid":"51a1ac2f03a0464d","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/58//#testresult/51a1ac2f03a0464d","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1670815222109,"stop":1670815222731,"duration":622}},{"uid":"8dd9c4044473f89b","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/57//#testresult/8dd9c4044473f89b","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1670807671510,"stop":1670807673092,"duration":1582}},{"uid":"a228356a7f25ca08","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/56//#testresult/a228356a7f25ca08","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1670793163517,"stop":1670793164163,"duration":646}},{"uid":"655fb156c8620237","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/55//#testresult/655fb156c8620237","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1670782675322,"stop":1670782676873,"duration":1551}},{"uid":"9a01f72dbfeac619","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/54//#testresult/9a01f72dbfeac619","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1670771638576,"stop":1670771639185,"duration":609}},{"uid":"8ce7a54b63825cc2","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/53//#testresult/8ce7a54b63825cc2","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1670761619842,"stop":1670761620547,"duration":705}},{"uid":"76c4b7ff9b2506f2","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/52//#testresult/76c4b7ff9b2506f2","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1670750034797,"stop":1670750035483,"duration":686}},{"uid":"fb6b811c1c01d6ca","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/51//#testresult/fb6b811c1c01d6ca","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1670739515331,"stop":1670739516882,"duration":1551}},{"uid":"c0c861933f25fefd","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/50//#testresult/c0c861933f25fefd","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1670728839867,"stop":1670728840519,"duration":652}},{"uid":"49d53886796c425","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/49//#testresult/49d53886796c425","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1670721553640,"stop":1670721555109,"duration":1469}},{"uid":"c46a03ef746138bd","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/48//#testresult/c46a03ef746138bd","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1670706761447,"stop":1670706762101,"duration":654}},{"uid":"2a2cac0b450d3e1d","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/47//#testresult/2a2cac0b450d3e1d","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1670696244990,"stop":1670696246422,"duration":1432}},{"uid":"38002234bc0ea78c","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/46//#testresult/38002234bc0ea78c","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1670685244931,"stop":1670685245968,"duration":1037}},{"uid":"dfca1434173eeeb3","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/45//#testresult/dfca1434173eeeb3","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1670675169845,"stop":1670675170486,"duration":641}},{"uid":"2fee1b37b19ae0bb","reportUrl":"https://twill-aol.github.io/tests_twill_care_backend/44//#testresult/2fee1b37b19ae0bb","status":"skipped","statusDetails":"XFAIL 401. Problem will be fixed\n\nAssertionError: Unexpected status code! Expected: 201.             Actual: 401","time":{"start":1670663610446,"stop":1670663611160,"duration":714}}]},"tags":["smoke","@pytest.mark.xfail(reason='401. Problem will be fixed')"]},"source":"909f090135c0f72.json","parameterValues":[]}